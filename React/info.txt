React lets you build user interfaces out of individual pieces called components. 
Create your own React components like Thumbnail, LikeButton, and Video. 
Then combine them into entire screens, pages, and apps.

Write React using JSX.
JSX -> JavaScript Extension Syntax. -> its lets us write HTML directly inside JS.

Working -> JSX convert into babel and it also convert into JS. 



* Set up local environment
    -> Create-React-App v/s Vite  -> https://semaphoreci.com/blog/vite

    npm create vite@latest

    npm install
    npm run dev // to start the server


* Writing Markup in JSX
    1. Return a single root element
    2. close al the tags
    3. camelcase most of the things


* React Fragment
    -> Fragment let you group a list of children without adding extra nodes to the DOM.

* JSX with curly braces
    -> if we use curly braces it will act like pure js 

* React Props
    -> Props are the information that you pass to a JSX tag.
    

* State in React
    -> The state is a built-in React object that used to eontain
        data or information about the component. A component's state can change over time ; 
        whenever it changes, the component re-renders.


* Hooks 
    -> Hooks were a new addition in React 16.8.
    -> They let you use state and other React features without writeing a class.
    -> useState() is a React Hook that lets you add a state variable to your component.
        -> useState returns an array with exactly two vlaues:
            1. The current state. During the first render, it will match the initialState
                you have passed.
            2. The set function that lets you update the state to a different value and triggger a re-render.

* Closure
    -> A closure is a feature in JavaScript where an inner function 
        has access to the outer (enclosing) function's variables.

* Functions as Props
    -> JS Functions are 1st class objects
        -> This means they can be passed to a function a s argument, returned form it and
            assigned to a variable.


* Forms in React
    -> The standard way with Forms is to use Controlled components, 
        so we make React state to be the "single source of truth".

* Handling Multiple inputs
    -> we create a common handleInputChange() for all elements
        -> event.target.name        -> changed field
        -> event.target.value       -> new value of the field

* validations
    -> Formik           -> is the validtions tool for form 
    -> npm install formik